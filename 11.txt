<!DOCTYPE html>
<html>
<head>
    <title>Calculator Application</title>
</head>
<body>
    <h1>Calculator Application</h1>
    <div id="calculator">
        <input type="text" id="display" readonly>
        <div id="buttons">
            <button onclick="appendNumber(7)">7</button>
            <button onclick="appendNumber(8)">8</button>
            <button onclick="appendNumber(9)">9</button>
            <button onclick="appendOperator('+')">+</button>
            <button onclick="appendNumber(4)">4</button>
            <button onclick="appendNumber(5)">5</button>
            <button onclick="appendNumber(6)">6</button>
            <button onclick="appendOperator('-')">-</button>
            <button onclick="appendNumber(1)">1</button>
            <button onclick="appendNumber(2)">2</button>
            <button onclick="appendNumber(3)">3</button>
            <button onclick="appendOperator('*')">*</button>
            <button onclick="appendNumber(0)">0</button>
            <button onclick="clearDisplay()">C</button>
            <button onclick="calculateResult()">=</button>
            <button onclick="appendOperator('/')">/</button>
        </div>
    </div>

    <script>
        // Calculator logic using anonymous functions
        const display = document.getElementById("display");
        let currentNumber = "";
        let currentOperator = "";
        let result = null;

        // Function to update the display
        const updateDisplay = () => {
            display.value = currentNumber;
        };

        // Function to append a number
        const appendNumber = (num) => {
            currentNumber += num;
            updateDisplay();
        };

        // Function to append an operator
        const appendOperator = (operator) => {
            if (currentNumber !== "") {
                if (currentOperator !== "") {
                    calculateResult();
                } else {
                    result = parseFloat(currentNumber);
                }
                currentOperator = operator;
                currentNumber = "";
                updateDisplay();
            }
        };

        // Function to clear the display
        const clearDisplay = () => {
            currentNumber = "";
            currentOperator = "";
            result = null;
            updateDisplay();
        };

        // Function to calculate the result
        const calculateResult = () => {
            if (currentOperator !== "" && currentNumber !== "") {
                switch (currentOperator) {
                    case "+":
                        result += parseFloat(currentNumber);
                        break;
                    case "-":
                        result -= parseFloat(currentNumber);
                        break;
                    case "*":
                        result *= parseFloat(currentNumber);
                        break;
                    case "/":
                        if (parseFloat(currentNumber) === 0) {
                            alert("Division by zero is not allowed.");
                            clearDisplay();
                            return;
                        }
                        result /= parseFloat(currentNumber);
                        break;
                }
                currentOperator = "";
                currentNumber = result.toString();
                updateDisplay();
            }
        };

    </script>
</body>
</html>
